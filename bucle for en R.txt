 Bucles For
Un forvbucle se utiliza para iterar sobre una secuencia:

Ejemplo
for (x in 1:10) {
  print(x)
}

Esto se parece menos a la forpalabra clave en otros lenguajes de programación y
 funciona más como un método iterador como el que se encuentra en otros lenguajes de programación orientados a objetos.

Con el for bucle podemos ejecutar un conjunto de sentencias, una vez para cada elemento de un vector, matriz, lista, etc.
Imprimir cada elemento de una lista:

fruits <- list("apple", "banana", "cherry")

for (x in fruits) {
  print(x)
}

Imprime el número de dados:

dice <- c(1, 2, 3, 4, 5, 6)

for (x in dice) {
  print(x)
}
El forbucle no requiere que se establezca una variable de indexación de antemano, como ocurre con whilelos bucles.

Romper
Con la breakdeclaración, podemos detener el bucle antes de que haya recorrido todos los elementos:

Ejemplo
Detener el bucle en "cherry":

fruits <- list("apple", "banana", "cherry")

for (x in fruits) {
  if (x == "cherry") {
    break
  }
  print(x)
}
El bucle se detendrá en "cherry" porque hemos elegido
 finalizar el bucle utilizando la breakdeclaración cuando xes igual a "cherry" ( x == "cherry").

Próximo
Con la nextdeclaración, podemos omitir una iteración sin terminar el bucle:

Ejemplo
Omitir "banana":

fruits <- list("apple", "banana", "cherry")

for (x in fruits) {
  if (x == "banana") {
    next
  }
  print(x)
}
Cuando el bucle pasa "banana", lo omitirá y continuará el bucle.

¡Yahtzee!
Si... De lo contrario combinado con un bucle For
Para demostrar un ejemplo práctico, digamos que jugamos una partida de Yahtzee.

Ejemplo
Imprime "¡Yahtzee!" Si el número del dado es 6:

dice <- 1:6

for(x in dice) {
  if (x == 6) {
    print(paste("The dice number is", x, "Yahtzee!"))
  } else {
    print(paste("The dice number is", x, "Not Yahtzee"))
  }
}

Bucles anidados
También es posible colocar un bucle dentro de otro bucle. Esto se denomina bucle anidado :

Ejemplo
Imprime el adjetivo de cada fruta en una lista:

adj <- list("red", "big", "tasty")

fruits <- list("apple", "banana", "cherry")
  for (x in adj) {
    for (y in fruits) {
      print(paste(x, y))
  }
}

